# Linux EC2 Machine setup:
apt-key adv --keyserver keyserver.ubuntu.com --recv 7F0CEB10
echo "deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen" >> /etc/apt/sources.list
echo "deb http://apt.brightbox.net hardy main" >> /etc/apt/sources.list

apt-get update
apt-get install ruby1.8-dev build-essential libcurl4-openssl-dev libssl-dev zlib1g-dev apache2-prefork-dev libapr1-dev libaprutil1-dev mongodb-10gen libapache2-mod-passenger -y

# Install the necessary gems:
gem install dm-core -v 1.1.0 --no-ri --no-rdoc
gem install dm-validations --no-ri --no-rdoc
gem install dm-aggregates -v 1.1.0 --no-ri --no-rdoc
gem install mongo -v 1.2.4   --no-ri --no-rdoc
gem install dm-mongo-adapter --no-ri --no-rdoc

gem install sinatra   --no-ri --no-rdoc
gem install httpclient --no-ri --no-rdoc
gem install aws-s3 --no-ri --no-rdoc
gem install json --no-ri --no-rdoc

# Passenger setup; This takes a while
gem install passenger --no-ri --no-rdoc
ruby /var/lib/gems/1.8/gems/passenger-3.0.7/bin/passenger-install-apache2-module -a

# Setup apache vhosts!
cat <<EOF >> /etc/apache2/apache2.conf

LoadModule passenger_module /var/lib/gems/1.8/gems/passenger-3.0.7/ext/apache2/mod_passenger.so
PassengerRoot /var/lib/gems/1.8/gems/passenger-3.0.7
PassengerRuby /usr/bin/ruby1.8
EOF

mv /etc/apache2/sites-enabled/000-default /etc/apache2/sites-enabled/.000-default 

cat <<EOF > /etc/apache2/sites-enabled/000-default
<VirtualHost *:80>
    ServerName `GET http://instance-data.ec2.internal/latest/meta-data/public-hostname`
    DocumentRoot /u/apps/mojo-jr/current/public
    <Directory /u/apps/mojo-jr/current/public>
        Allow from all
        Options -MultiViews
    </Directory>
</VirtualHost>
EOF

# Restart apache
apache2ctl restart

# Capistrano for deployment - needs to be installed only at the dev machine
# from which to deploy. Not needed in production
# sudo gem install capistrano --no-ri --no-rdoc
  
# TODO: Figure out how to use bundler to bundle these things up

# Linux to watch out
#   Web server deployment
#   Monitoring
#   Logging

# Setup cron job log. Cron job is setup as part of cold deploy
touch "/var/log/backup.log"
chmod 0777 /var/log/backup.log

rm /home/ubuntu/.ssh/id_rsa /home/ubuntu/.ssh/id_rsa.pub
sudo -u ubuntu ssh-keygen -N '' -f /home/ubuntu/.ssh/id_rsa -t rsa -q
sudo -u ubuntu ssh-add id_rsa

cat "Add this to github deploy keys for the repo:"
echo /home/ubuntu/.ssh/id_rsa.pub